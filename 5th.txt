#pragma config(CircuitBoardType, typeCktBoardUNO)
#pragma config(UART_Usage, UART0, uartSystemCommPort, baudRate200000, IOPins, dgtl1, dgtl0)
#pragma config(Motor,  servo_10,        rightServo,    tmotorServoContinuousRotation, openLoop, reversed, IOPins, dgtl10, None)
#pragma config(Motor,  motor_11,        leftServo,     tmotorServoContinuousRotation, openLoop, IOPins, dgtl11, None)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
 
task main() 
{
  while(true) //repeat indefinitely
  {
    // code to drive forward for 2 seconds
    motor[leftServo] = 50;   //Set the left servo to go forward at power level 50
    motor[rightServo] = 50;  //Set the right servo to go forward at power level 50
    wait1Msec(2000);         //pause code execution for 2000ms (2 seconds)
 
 
    // code to stop the robot for 1 second
    motor[leftServo] = 0;    //Stop the left servo
    motor[rightServo] = 0;   //Stop the right servo
    wait1Msec(1000);         //pause code execution for 1000ms (1 second)    
 
 
    // code to drive backwards for 2 seconds
    motor[leftServo] = -50;  //Set the left servo to go backwards at power level -50 
    motor[rightServo] =- 50; //Set the right servo to go backwards at power level -50 
    wait1Msec(2000);         //pause code execution for 2000ms (2 seconds)
 
 
    // code to stop the robot for 1 second
    motor[leftServo] = 0;    //Stop the left servo
    motor[rightServo] = 0;   //Stop the right servo
    wait1Msec(1000);         //pause code execution for 1000ms (1 second)
  }
}